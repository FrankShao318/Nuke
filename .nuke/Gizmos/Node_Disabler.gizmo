set cut_paste_input [stack 0]
version 12.0 v2
push $cut_paste_input
NoOp {
name Node_Disabler
knobChanged disableNodesInList()
tile_color 0xff
label "\[expr \{ \[value disable] == true ? \"Nodes Disabled\" : \"Nodes Enabled\"\} ]"
selected true
xpos 46
ypos -241
addUserKnob {20 User}
addUserKnob {26 "" +STARTLINE}
addUserKnob {22 addNodes l "Add Selected Nodes To List" +HIDDEN T "# Create list.\nnode_list = \[]\n\n# Loop through selected nodes, and add their names to node_list.\nfor i in nuke.selectedNodes():\n\tnode_list.append(i.name())\n\n# Hide the start knob & show the add more knob.\nnuke.thisNode().knob('addMoreNodes').setVisible(True)\nnuke.thisNode().knob('addNodes').setVisible(False)\n\nprint node_list\n\n# Turn the list into a single string, and add a line break, a bullet point and a space in between each item.\nnode_list_cleaned = '\\n・ '.join(node_list)\n\n# Set the value of the txt knob.\nnuke.thisNode()\['txtknob_node_list'].setValue('・ ' + node_list_cleaned)\n\n# Define function for knobChange.\ndef disableNodesInList():\n\n    # Loop through all the nodes in node_list.\n    for i in node_list:\n\n        # Check if the node has a disable knob.\n        if nuke.toNode(i).knob('disable'):\n\n            # If it does, set its disable knob to the value of Node_Disabler's disable knob.\n            nuke.toNode(i).knob('disable').setValue(nuke.thisNode().knob('disable').value())\n\n        # If the node does not have a disable knob, print an error message in the Script Editor.\n        else:\n            print '- ' + i + \" does not have a 'disable' knob! Ignoring...\"\n\n# Add the knobChange callback to Node_Disabler.\nnuke.toNode('Node_Disabler').knob('knobChanged').setValue('disableNodesInList()')\n\n" +STARTLINE}
addUserKnob {22 addMoreNodes l "Add More Selected Nodes To List" T "# Loop through selected nodes.\nfor i in nuke.selectedNodes():\n\n    # Check if the selected node's name is already in node_list.\n    if i.name() in node_list:\n\n\t# If it is, print a message to the Script Editor.\n\tprint i.name() + ' is already in the list.'\n\n    # But if it isn't in node_list, add it.\n    else:\n    \tnode_list.append(i.name())\n\n# Check if things are working...\nprint node_list\n\n# Turn the list into a single string, and add a line break, a bullet point and a space in between each item.\nnode_list_cleaned = '\\n・ '.join(node_list)\n\n# Set the value of the txt knob.\nnuke.thisNode()\['txtknob_node_list'].setValue('・ ' + node_list_cleaned)" +STARTLINE}
addUserKnob {26 "" +STARTLINE}
addUserKnob {22 clearList l "Clear List" T "# Create list.\nnode_list = \[]\n\n# Reset visibility.\nnuke.thisNode().knob('addNodes').setVisible(True)\nnuke.thisNode().knob('addMoreNodes').setVisible(False)\n\n# Reset the Node List: text knob to be 'None'.\nnuke.thisNode()\['txtknob_node_list'].setValue('・None')" +STARTLINE}
addUserKnob {26 spacer l "" -STARTLINE T "    "}
addUserKnob {6 disable -STARTLINE}
addUserKnob {26 "" +STARTLINE}
addUserKnob {26 txtknob_node_list l "Node List:" T "・ Transform1\n・ Grade1\n・ Tracker1"}
}
